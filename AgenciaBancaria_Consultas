-- 1 - Listar nome e número das agências.
SELECT nome, numero FROM agencia;

--2 - Listar ID, número, digíto das contas.
SELECT id, numero FROM conta;

--3 - Listar ID, número, digíto e tipo da conta.
SELECT conta.id, conta.numero, tipo_conta.tipo_conta FROM conta, tipo_conta 
WHERE conta.id_tipo_conta = tipo_conta.id;

--4 - Listar id, número, digito e tipo da conta. Deve ser listado apenas para as contas do tipo 'Conta Corrente'.
SELECT conta.id, conta.numero, tipo_conta.tipo_conta FROM conta
LEFT JOIN tipo_conta ON conta.id_tipo_conta = tipo_conta.id WHERE tipo_conta.tipo_conta LIKE 'Corrente';

-- 5 - Listar cliente(nome, cpf), conta (número) dos clientes.
SELECT cliente.nome, cliente.cpf, conta.numero FROM cliente
LEFT JOIN conta ON cliente.id = conta.id_cliente;

--6 - Listar cliente(nome, cpf), conta(agência, número e digito) dos clientes.
SELECT cliente.nome, cliente.cpf, agencia.nome, conta.numero FROM cliente
INNER JOIN conta ON cliente.id = conta.id_cliente
INNER JOIN agencia ON agencia.id = conta.id_agencia;

--7 - Listar cliente(nome, cpf), conta(agência, número e dígito). Deve ser listado apenas dos clientes que residem na cidade de 'São Paulo'.
SELECT cliente.nome, cliente.cpf, agencia.nome, conta.numero, cidade.descricao FROM cliente
INNER JOIN conta ON cliente.id = conta.id_cliente
INNER JOIN agencia ON agencia.id = conta.id_agencia
INNER JOIN endereco ON cliente.id_endereco = endereco.id
INNER JOIN cidade ON endereco.id_cidade = cidade.id
WHERE cidade.descricao LIKE 'sao paulo';

--8 - Listar cliente(nome, cpf), quantidade de contas dos clientes.
SELECT cliente.nome, cliente.cpf, COUNT(conta.id_cliente) as qtd_conta
	FROM cliente 
	INNER JOIN conta ON cliente.id = conta.id_cliente
	GROUP BY cliente.nome, cliente.cpf;

--9 - Listar conta(agência, número e digito), operação(tipo, data, valor) das contas. Nesta listagem deve ser considerado apenas as operações do ano de 2022.
SELECT agencia.nome, conta.numero, tipo_transacao.tipo_transacao, transacao.data, transacao.valor, transacao.data FROM conta
LEFT JOIN agencia ON conta.id_agencia = agencia.id
LEFT JOIN transacao ON conta.id = transacao.id_conta_origem
LEFT JOIN tipo_transacao ON transacao.id_tipo_transacao = tipo_transacao.id
WHERE transacao.data BETWEEN '2022-01-01'AND '2022-12-31';

-- 10 - Listar a conta e a quantidade de operações que ocorrem no ano de 2022.
	SELECT conta.numero, COUNT(transacao.id) as qtd_transacao
	FROM transacao 
	LEFT JOIN conta ON transacao.id_conta_origem = conta.id
	WHERE transacao.data BETWEEN '2022-01-01'AND '2022-12-31'
	GROUP BY conta.numero;

--11 - Listar as contas independente de ter tido ou não operações. 
--Porém, para as que tiveram, deve ser carregado as operações das mesmas.
SELECT conta.numero, tipo_transacao.tipo_transacao FROM conta
	LEFT JOIN transacao ON conta.id = transacao.id_conta_origem
	LEFT JOIN tipo_transacao ON transacao.id_tipo_transacao = tipo_transacao.id;


--12 - Listar todas as contas que não tiveram operação no ano de 2022.
SELECT DISTINCT conta.numero FROM conta
	WHERE conta.id NOT IN (
		SELECT transacao.id_conta_origem FROM transacao 
		WHERE transacao.data BETWEEN '2022-01-01'AND '2022-12-31'
	);

--13 - Listar cliente(nome, cpf), conta(agência, número, dígito) e também o saldo atual.
SELECT cliente.nome, cliente.cpf, agencia.nome, conta.numero, SUM(transacao.valor) as saldo FROM cliente
	LEFT JOIN conta ON cliente.id = conta.id_cliente
	LEFT JOIN agencia ON conta.id_agencia = agencia.id
	LEFT JOIN transacao ON transacao.id_conta_origem = conta.id
	GROUP BY  cliente.nome, cliente.cpf, agencia.nome, conta.numero;

--14 - Listar cliente(nome e cpf), conta(agência, número e dígito) e também o saldo. Neste exercício deve ser listador apenas os clientes com saldo negativo.
SELECT cliente.nome, cliente.cpf, agencia.nome, conta.numero, SUM(transacao.valor) as saldo FROM cliente
	LEFT JOIN conta ON cliente.id = conta.id_cliente
	LEFT JOIN agencia ON conta.id_agencia = agencia.id
	LEFT JOIN transacao ON transacao.id_conta_origem = conta.id
	GROUP BY  cliente.nome, cliente.cpf, agencia.nome, conta.numero
	HAVING SUM(transacao.valor) <0 ;


--15 - Listar as operações das contas. 
--Na listagem deve conter a conta (agencia, número e digito), tipo da operação, valor, data, operação de origem (quando existir).
SELECT transacao.id, agencia.nome, conta.numero, tipo_transacao.tipo_transacao, transacao.valor, transacao.data FROM conta
	LEFT JOIN agencia ON agencia.id = conta.id_agencia
	LEFT JOIN transacao ON conta.id = transacao.id_conta_origem
	LEFT JOIN tipo_transacao ON transacao.id_tipo_transacao = tipo_transacao.id;
	
	SELECT * FROM conta_saldo;



-- 1 - O banco deseja saber qual o saldo atual das contas. Como as formas normais recomendam que o saldo não seja gravado,
-- pois é um valor calculado, podemos trabalhar com uma view para atender essa necessidade. 
-- Então, para atender esse exercício, crie uma view chamada conta_saldo e nesta faça o calculo do saldo de cada conta. 
-- Lembre-se o saldo da conta é o soma de todas as operações que aconteceram.
-- Listar cliente(nome, cpf), conta(agência, número, dígito) e o saldo disponível para essa.
	
CREATE OR REPLACE VIEW conta_saldo AS
SELECT cliente.nome, cliente.cpf, conta.id_agencia, conta.numero, 
	SUM(transacao.valor) AS saldo_atual
	FROM conta
	LEFT JOIN cliente ON conta.id_cliente = cliente.id
	LEFT JOIN transacao ON conta.id = transacao.id_conta_origem
	GROUP BY cliente.nome, cliente.cpf, conta.id_agencia, conta.numero
	ORDER BY cliente.nome;	
	
	-- 2 - O banco deseja ter um histórico de transações das contas. 
-- Já deve haver uma tabela de operações na base. 
-- Então crie uma view que exiba essas operações, não precisa exibir saldo da conta.
-- Listar cliente(nome, cpf) conta(agência, número, dígito), transação(tipo, data, valor).	

CREATE OR REPLACE VIEW historico_transacoes AS
SELECT cliente.nome, cliente.cpf, conta.id_agencia, conta.numero,
	tipo_transacao.tipo_transacao, transacao.data, transacao.valor
	FROM conta
	LEFT JOIN cliente ON cliente.id = conta.id_cliente
	LEFT JOIN transacao ON conta.id = transacao.id_conta_origem
	LEFT JOIN tipo_transacao ON tipo_transacao.id = transacao.id_tipo_transacao
	ORDER BY cliente.nome, conta.numero; 

	SELECT * FROM historico_transacoes;

